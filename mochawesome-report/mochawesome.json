{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-02T10:53:36.789Z",
    "end": "2022-03-02T10:53:57.684Z",
    "duration": 20895,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8b57456e-ac84-4526-8037-079ebc9c2225",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f00105cc-7a06-4aae-88ce-af8c008e47e0",
          "title": "rstestv8",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login test",
              "fullTitle": "rstestv8 Login test",
              "timedOut": null,
              "duration": 6232,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const defaultPage = new _DefaultPage.default();\nconst loginPage = new _LoginPage.default();\ncy.get(\"@data\").then(data => {\n  defaultPage.getAccount().should(\"be.visible\").click();\n  defaultPage.getLogin().should(\"be.visible\").click();\n  cy.title().should(\"eq\", \"Login Page\"); //move?\n  loginPage.getEmail().type(data.email, {\n    delay: 50\n  });\n  loginPage.getPassword().type(data.password, {\n    delay: 50\n  });\n  loginPage.getPasswordVis().click(); //loginPage.clickFinalLogin().click();\n});",
              "err": {},
              "uuid": "ce6930b2-5658-4a99-afbf-7627d34f196b",
              "parentUUID": "f00105cc-7a06-4aae-88ce-af8c008e47e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Signup test",
              "fullTitle": "rstestv8 Signup test",
              "timedOut": null,
              "duration": 8687,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new _LoginPage.default();\nconst defaultPage = new _DefaultPage.default();\ncy.get(\"@data\").then(data => {\n  defaultPage.getAccount().should(\"be.visible\").click();\n  defaultPage.getLogin().should(\"be.visible\").click();\n  cy.title().should(\"eq\", \"Login Page\"); //move?\n  loginPage.getRegistration().click();\n  loginPage.getFirstName().type(data.firstName, {\n    delay: 50\n  });\n  loginPage.getLastName().type(data.lastName, {\n    delay: 50\n  });\n  loginPage.getRegEmail().type(data.email, {\n    delay: 50\n  });\n  loginPage.getRegPassword().type(data.password, {\n    delay: 50\n  });\n  loginPage.getPhoneNo().type(data.phoneNumber, {\n    delay: 50\n  });\n  loginPage.getCheckBoxNewsie().uncheck({\n    force: true\n  });\n  loginPage.getCreateAccount().click(); //negative asssertion here for CheckBoxTerms()\n  loginPage.getCheckBoxTerms().check({\n    force: true\n  }); // loginPage.getCreateAccount().click(); don't want to actually sign up\n});",
              "err": {},
              "uuid": "eee374ec-4267-4fd5-b3b4-c463d674a112",
              "parentUUID": "f00105cc-7a06-4aae-88ce-af8c008e47e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "search for product and add to cart",
              "fullTitle": "rstestv8 search for product and add to cart",
              "timedOut": null,
              "duration": 2521,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const defaultPage = new _DefaultPage.default();\ncy.get(\"@data\").then(data => {\n  //also, pom pom-ing is stress\n  cy.get(\"#fi-q\").type(data.productName[0], {\n    delay: 50\n  }); //to select the results\n  //i can either loop through the drop down results,\n  //or click the search button\n}); // it(\"rstestv2\", () => {\n//   cy.visit(\"https://rahulshettyacademy.com/seleniumPractise/#/\");\n//   cy.get(\".search-keyword\").type(\"ca\");\n//   cy.wait(2000);\n//   cy.get(\".products\").as(\"productlocator\");\n//   cy.get(\"@productlocator\")\n//     .find(\".product\")\n//     .eq(2)\n//     .contains(\"ADD TO CART\")\n//     .click()\n//     .then(() => {});\n//   cy.get(\"@productlocator\")\n//     .find(\".product\")\n//     .each(($el, index, $list) => {\n//       const textVeg = $el.find(\"h4.product-name\").text();\n//       if (textVeg.includes(\"Cashew\")) {\n//         cy.wrap($el).find(\"button\").click();\n//       }\n//     });\n//   cy.get(\".brand\").should(\"have.text\", \"GREENKART\");\n//   cy.get(\".brand\").then((logoelement) => {\n//     cy.log(logoelement.text());\n//   });\n//   cy.get(\".cart-icon > img\").click();\n//   //cy.get(\".cart-icon > img\"); //CSS selector method to proceed to checkout\n//   cy.contains(\"PROCEED TO CHECKOUT\").click();\n//   cy.get(\":nth-child(14)\").click();\n//});",
              "err": {},
              "uuid": "76a9ab09-a49b-4299-9861-b9bef191f4ff",
              "parentUUID": "f00105cc-7a06-4aae-88ce-af8c008e47e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce6930b2-5658-4a99-afbf-7627d34f196b",
            "eee374ec-4267-4fd5-b3b4-c463d674a112",
            "76a9ab09-a49b-4299-9861-b9bef191f4ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17440,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.0"
    },
    "marge": {
      "options": null,
      "version": "6.1.0"
    }
  }
}